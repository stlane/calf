{
    "collab_server" : "",
    "contents" : "\nlibrary(CALF)\nlibrary(ggplot2)\nsetwd(\"C:/Users/stlane/Dropbox/Current Consulting/clark jeffries/materials\")\n\n\nry <- read.csv(\"RY_data_for_SL.csv\", header = TRUE)\ncalf(data = ry, nMarkers = 100, targetVector = \"binary\", optimize = \"auc\")\n\ndatamatrix <- read.csv(\"73x141_data.csv\", header = TRUE)\n\ncalf(data = datamatrix, nMarkers = 6, targetVector = \"binary\",\n     optimize = \"pval\", reverse = FALSE, verbose = TRUE)\n\n\ncalf_randomize(data = CaseControl, nMarkers = 6, targetVector = \"binary\",\n     optimize = \"pval\", reverse = TRUE, verbose = TRUE)\n\nout   <- calf(data = CaseControl, nMarkers = 6, targetVector = \"binary\", optimize = \"auc\")\nstore <- out$selection\nwrite.csv(store, \"C:/Users/stlane/Desktop/output.csv\", row.names = FALSE)\n\nout <- calf_randomize(data = CaseControl, nMarkers = 6, targetVector = \"binary\", times = 10)\nout$multiple\nout$auc\n\ndata1000 <- read.csv(\"136x1000_Me.csv\", header = TRUE, check.names = FALSE)\nnames(data1000)\nout <- calf(data = data1000, nMarkers = 6, targetVector = \"binary\", optimize = \"auc\")\nout\ncalf_randomize(data = data1000, nMarkers = 6, targetVector= \"binary\", optimize = \"auc\")\ndata95 <- read.csv(\"136x95_Me.csv\", header = TRUE)\n\n\n\ncalf(data = data95, nMarkers = 6, targetVector = \"binary\")\ndf <- out$selection\nwrite.csv(df, \"C:/Users/stlane/Desktop/output.csv\", row.names = FALSE)\n\ndata196 <- read.csv(\"136x196_Me.csv\", header = TRUE)\ncalf(data = data196, nMarkers = 6, targetVector = \"binary\")\n\ndata <- read.csv(\"163x60_data.csv\", header = TRUE)\ncalf(data = data, nMarkers = 6)\n\ndata <- read.delim(\"56x136_data.txt\", sep = \"\\t\", stringsAsFactors = F, header = TRUE)\ncalf(data = data, nMarkers = 6)\n\ndata <- read.delim(\"KVn_data.txt\", sep = \"\\t\", header = T)\ncalf(data = data, nMarkers = 6)\n\ndata <- read.delim(\"68x136_data.txt\", sep = \"\\t\", header = T)\nout <- calf(data = data, nMarkers = 6, targetVector = \"binary\")\ncalf_randomize(data = data, nMarkers = 6, targetVector = \"binary\")\n\nout <- calf_randomize(data = data, nMarkers = 6, targetVector = \"binary\")\n\ncalf_subset(data = CaseControl, nMarkers = 6, proportion = .8, times = 20)\ncalf_randomize(data = CaseControl, nMarkers = 6)\n\ncalf_randomize(data = data, nMarkers = 6, targetVector = \"binary\", times =10)\n\ndata <- read.csv(\"for_Stephanie_real_vec.csv\")\ncalf(data = data, nMarkers = 5, targetVector = \"real\")\ncalf_subset(data = data, nMarkers = 5, targetVector = \"real\", times = 5)\nout = calf_randomize(data = data, nMarkers = 5, targetVector = \"real\", times = 5)\nout$finalBest\n\nlibrary(ggplot2)\n\n\nsmoking <- read.csv(\"Smoking_data_rand.csv\")\nsmoking <- read.csv(\"Smoking_data_rand+.csv\")\ncalf(data = smoking, nMarkers = 5, targetVector = \"binary\")\n\n# miRNA <- read.csv(file.path(getwd(),\n#                             \"analysis for diana 05-31-2016/SOPS_P1 data_miRNA_stl.csv\"),\n#                   header = TRUE)\n#\n# miRNA_P <- miRNA[miRNA$group == \"UC\", ]\n# miRNA_P <- miRNA_P[ ,-1]\n# names(miRNA)\n# miRNA_P$SOPS_P1 <- ifelse(miRNA_P$SOPS_P1 > 5, 1, 0)\n#\n# calf(data = miRNA_P, nMarkers = 5, targetVector = \"binary\")\n#\n# miRNA$SOPS_P1 <- ifelse(miRNA$SOPS_P1 > 5, 1, 0)\n#\n# Mono_all <- read.csv(\"Mono_all_data.csv\", header = T)\n# calf(data = Mono_all, nMarkers = 10, targetVector = \"real\")\n#\n# Mono_NP  <- read.csv(\"Mono_NP_data.csv\")\n# calf(data = Mono_NP, nMarkers = 10, targetVector = \"real\")\n#\n# Mono_P   <- read.csv(\"Mono_P_data.csv\")\n# calf(data = Mono_P, nMarkers = 10, targetVector = \"real\")\n#\n# Mono_UC  <- read.csv(\"Mono_UC_data.csv\")\n# calf(data = Mono_UC, nMarkers = 10, targetVector = \"real\")\n\n",
    "created" : 1493319030001.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "3460654468",
    "id" : "9640A45F",
    "lastKnownWriteTime" : 1494861619,
    "last_content_update" : 1494861619677,
    "path" : "C:/Users/stlane/Dropbox/Current Consulting/clark jeffries/calf_test_script2.R",
    "project_path" : null,
    "properties" : {
    },
    "relative_order" : 6,
    "source_on_save" : false,
    "source_window" : "",
    "type" : "r_source"
}